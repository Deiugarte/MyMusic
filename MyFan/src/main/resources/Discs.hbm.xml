<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Jun 13, 2016 1:18:21 AM by Hibernate Tools 5.1.0.Alpha1 -->
<hibernate-mapping>
    <class name="myfan.data.models.Discs" table="discs" catalog="myfan" optimistic-lock="version">
        <id name="discId" type="java.lang.Integer">
            <column name="DiscId" />
            <generator class="identity" />
        </id>
        <many-to-one name="artists" class="myfan.data.models.Artists" fetch="select">
            <column name="Artist" not-null="true" />
        </many-to-one>
        <many-to-one name="genres" class="myfan.data.models.Genres" fetch="select">
            <column name="Genre" not-null="true" />
        </many-to-one>
        <property name="name" type="string">
            <column name="Name" length="45" not-null="true" />
        </property>
        <property name="description" type="string">
            <column name="Description" length="45" not-null="true" />
        </property>
        <property name="releaseYear" type="date">
            <column name="ReleaseYear" length="0" not-null="true" />
        </property>
        <property name="label" type="string">
            <column name="Label" length="45" />
        </property>
        <set name="discsCalificationses" table="discs_califications" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="Disc" not-null="true" />
            </key>
            <one-to-many class="myfan.data.models.DiscsCalifications" />
        </set>
        <set name="songses" table="songs" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="Disc" not-null="true" />
            </key>
            <one-to-many class="myfan.data.models.Songs" />
        </set>
    </class>
</hibernate-mapping>
